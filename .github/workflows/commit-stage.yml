name: Commit Stage
on: push # trigger for the job

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: maxwellt/catalog-service
  APP_VERSION: latest
  JAVA_VERSION: 21
  RUN_ON_VERSION: ubuntu-24.04

jobs: # run in parallel
  build:
    name: Build and Test
    runs-on: ${{ env.RUN_ON_VERSION }}
    permissions:
      contents: read # permission to check out the repository code
      security-events: write # permission to submit security events to GitHub
    steps: # are run sequentially
      - name: Checkout source code
        uses: actions/checkout@v4 # can be an action (like here) or a shell command
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan # identifier so it can be referenced in other steps
        with:
          path: "${{ github.workspace }}"
          fail-build: true
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ] # can't run in parallel with build because it defines the needs here
    runs-on: ${{ env.RUN_ON_VERSION }}
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}
          fail-build: true
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.APP_VERSION }}
